#!/usr/bin/env python3
"""
Teste do fetcher de editais reais
"""

import sys
import os
sys.path.append('/Users/lucianoterres/Documents/GitHub/concurso-ai-orchestrated/backend/edital-analyzer')

from app.api.real_edital_fetcher import RealEditalFetcher

def test_fetcher():
    """Testa o fetcher de editais reais"""
    print("üîç Testando fetcher de editais reais...")
    
    fetcher = RealEditalFetcher()
    
    try:
        # Testar busca de concursos
        print("1Ô∏è‚É£ Buscando concursos...")
        concursos = fetcher.get_all_concursos()
        print(f"‚úÖ Encontrados {len(concursos)} concursos")
        
        if concursos:
            print("\nüìã Primeiros concursos encontrados:")
            for i, concurso in enumerate(concursos[:3]):
                print(f"  {i+1}. {concurso.get('titulo', 'Sem t√≠tulo')}")
                print(f"     √ìrg√£o: {concurso.get('orgao', 'N/A')}")
                print(f"     Banca: {concurso.get('banca', 'N/A')}")
                print(f"     Vagas: {concurso.get('vagas', 'N/A')}")
                print(f"     Fonte: {concurso.get('fonte', 'N/A')}")
                print()
        
        # Testar filtros
        print("2Ô∏è‚É£ Testando filtros...")
        filtros = {'banca': 'CESPE'}
        concursos_filtrados = fetcher.filtrar_concursos(concursos, filtros)
        print(f"‚úÖ Concursos CESPE: {len(concursos_filtrados)}")
        
        # Testar busca por ID
        if concursos:
            print("3Ô∏è‚É£ Testando busca por ID...")
            primeiro_id = concursos[0].get('id')
            concurso_encontrado = fetcher.buscar_edital_por_id(primeiro_id)
            if concurso_encontrado:
                print(f"‚úÖ Concurso encontrado: {concurso_encontrado.get('titulo')}")
            else:
                print("‚ùå Concurso n√£o encontrado")
        
        # Testar extra√ß√£o de conte√∫do
        print("4Ô∏è‚É£ Testando extra√ß√£o de conte√∫do...")
        conteudo = fetcher.get_edital_content("teste")
        print(f"‚úÖ Conte√∫do extra√≠do: {len(conteudo)} caracteres")
        
        print("\nüéâ Teste conclu√≠do com sucesso!")
        return True
        
    except Exception as e:
        print(f"‚ùå Erro no teste: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    print("üöÄ TESTE DO FETCHER DE EDITAIS REAIS")
    print("=" * 50)
    
    result = test_fetcher()
    
    print("\n" + "=" * 50)
    if result:
        print("‚úÖ Fetcher funcionando corretamente!")
        print("üîç Agora os editais s√£o buscados de fontes reais!")
    else:
        print("‚ùå Problemas no fetcher")
